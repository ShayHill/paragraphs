[tool.poetry]
name = "paragraphs"
version = "0.2.0"
description = "Incorporate long strings painlessly, beautifully into Python code."
authors = ["Shay Hill <shay_public@hotmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
commitizen = "^2.39.1"
pre-commit = "^2.21.0"


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.0"
tag_format = "$version"
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__.py"]

pythonVersion = "3.8"
pythonPlatform = "Any"

typeCheckingMode = "strict"
reportShadowedImports = true
reportCallInDefaultInitializer = true
reportImplicitStringConcatenation = true
reportPropertyTypeMismatch = true
reportUninitializedInstanceVariable = true
reportUnnecessaryTypeIgnoreComment = true
reportUnusedCallResult = true
